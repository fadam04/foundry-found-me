digraph G {
  graph [ ratio = "auto", page = "100", compound =true, bgcolor = "#2e3e56" ];
  node [ style = "filled", fillcolor = "#edad56", color = "#edad56", penwidth =3 ];
  edge [ color = "#fcfcfc", penwidth =2, fontname = "helvetica Neue Ultra Light" ];
subgraph "clusterDeployFundMe" {
  graph [ label = "DeployFundMe", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "DeployFundMe.run" [ label = "run", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
}

subgraph "clusterFundMe" {
  graph [ label = "FundMe", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "FundMe.<Constructor>" [ label = "<Constructor>", color = "#FF9797", fillcolor = "#FF9797" ];
  "FundMe.fund" [ label = "fund" ];
  "FundMe.getVersion" [ label = "getVersion", color = "#FF9797", fillcolor = "#FF9797" ];
  "FundMe.onlyOwner" [ label = "onlyOwner", color = "#1bc6a6", shape =doubleoctagon ];
  "FundMe.cheaperWithdraw" [ label = "cheaperWithdraw", color = "#FF9797", fillcolor = "#FF9797" ];
  "FundMe.withdraw" [ label = "withdraw", color = "#FF9797", fillcolor = "#FF9797" ];
  "FundMe.<Fallback>" [ label = "<Fallback>", color = "brown", fillcolor = "#ffbdb9" ];
  "FundMe.<Receive Ether>" [ label = "<Receive Ether>", color = "brown", fillcolor = "#ffbdb9" ];
  "FundMe.getAddressToAmountFunded" [ label = "getAddressToAmountFunded", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "FundMe.getFunder" [ label = "getFunder", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "FundMe.getOwner" [ label = "getOwner", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "FundMe.AggregatorV3Interface" [ label = "AggregatorV3Interface" ];
  "FundMe.NotOwner" [ label = "NotOwner" ];
  "FundMe.payable" [ label = "payable" ];
}

subgraph "clusterPriceConverter" {
  graph [ label = "PriceConverter  (lib)", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "PriceConverter.getPrice" [ label = "getPrice", color = "#f2c383", fillcolor = "#f2c383" ];
  "PriceConverter.getConversionRate" [ label = "getConversionRate", color = "#f2c383", fillcolor = "#f2c383" ];
}

subgraph "clusterHelperConfing" {
  graph [ label = "HelperConfing", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "HelperConfing.activeNetworkConfig" [ label = "activeNetworkConfig" ];
  "HelperConfing.<Constructor>" [ label = "<Constructor>", color = "#FF9797", fillcolor = "#FF9797" ];
  "HelperConfing.getSepoliaEthConfig" [ label = "getSepoliaEthConfig" ];
  "HelperConfing.getOtCreateAnvilEthConfig" [ label = "getOtCreateAnvilEthConfig" ];
}

subgraph "clusterMockV3Aggregator" {
  graph [ label = "MockV3Aggregator", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "MockV3Aggregator.<Constructor>" [ label = "<Constructor>", color = "#FF9797", fillcolor = "#FF9797" ];
  "MockV3Aggregator.updateAnswer" [ label = "updateAnswer" ];
  "MockV3Aggregator.updateRoundData" [ label = "updateRoundData", color = "#FF9797", fillcolor = "#FF9797" ];
  "MockV3Aggregator.getRoundData" [ label = "getRoundData", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "AggregatorV3Interface.latestRoundData" [ label = "latestRoundData", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "MockV3Aggregator.description" [ label = "description", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
}

subgraph "clustervm" {
  graph [ label = "vm", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "vm.startBroadcast" [ label = "startBroadcast" ];
  "vm.stopBroadcast" [ label = "stopBroadcast" ];
}

subgraph "clusterAggregatorV3Interface" {
  graph [ label = "AggregatorV3Interface", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "AggregatorV3Interface.version" [ label = "version" ];
  "AggregatorV3Interface.latestRoundData" [ label = "latestRoundData" ];
}

  "DeployFundMe.run";
  "HelperConfing.activeNetworkConfig";
  "vm.startBroadcast";
  "vm.stopBroadcast";
  "FundMe.<Constructor>";
  "FundMe.AggregatorV3Interface";
  "FundMe.getVersion";
  "AggregatorV3Interface.version";
  "FundMe.onlyOwner";
  "FundMe.NotOwner";
  "FundMe.cheaperWithdraw";
  "FundMe.payable";
  "FundMe.withdraw";
  "FundMe.<Fallback>";
  "FundMe.fund";
  "FundMe.<Receive Ether>";
  "PriceConverter.getPrice";
  "AggregatorV3Interface.latestRoundData";
  "PriceConverter.getConversionRate";
  "HelperConfing.<Constructor>";
  "HelperConfing.getSepoliaEthConfig";
  "HelperConfing.getOtCreateAnvilEthConfig";
  "MockV3Aggregator.<Constructor>";
  "MockV3Aggregator.updateAnswer";
  "DeployFundMe.run" -> "HelperConfing.activeNetworkConfig" [ color = "white" ];
  "DeployFundMe.run" -> "vm.startBroadcast" [ color = "white" ];
  "DeployFundMe.run" -> "vm.stopBroadcast" [ color = "white" ];
  "FundMe.<Constructor>" -> "FundMe.AggregatorV3Interface" [ color = "#1bc6a6" ];
  "FundMe.getVersion" -> "AggregatorV3Interface.version" [ color = "white" ];
  "FundMe.onlyOwner" -> "FundMe.NotOwner" [ color = "#1bc6a6" ];
  "FundMe.cheaperWithdraw" -> "FundMe.payable" [ color = "#1bc6a6" ];
  "FundMe.withdraw" -> "FundMe.payable" [ color = "#1bc6a6" ];
  "FundMe.<Fallback>" -> "FundMe.fund" [ color = "#1bc6a6" ];
  "FundMe.<Receive Ether>" -> "FundMe.fund" [ color = "#1bc6a6" ];
  "PriceConverter.getPrice" -> "AggregatorV3Interface.latestRoundData" [ color = "white" ];
  "PriceConverter.getConversionRate" -> "PriceConverter.getPrice" [ color = "#1bc6a6" ];
  "HelperConfing.<Constructor>" -> "HelperConfing.getSepoliaEthConfig" [ color = "#1bc6a6" ];
  "HelperConfing.<Constructor>" -> "HelperConfing.getOtCreateAnvilEthConfig" [ color = "#1bc6a6" ];
  "HelperConfing.getOtCreateAnvilEthConfig" -> "vm.startBroadcast" [ color = "white" ];
  "HelperConfing.getOtCreateAnvilEthConfig" -> "vm.stopBroadcast" [ color = "white" ];
  "MockV3Aggregator.<Constructor>" -> "MockV3Aggregator.updateAnswer" [ color = "#1bc6a6" ];


rankdir=LR
node [shape=plaintext]
subgraph cluster_01 { 
label = "Legend";
key [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
  <tr><td align="right" port="i1">Internal Call</td></tr>
  <tr><td align="right" port="i2">External Call</td></tr>
  <tr><td align="right" port="i3">Defined Contract</td></tr>
  <tr><td align="right" port="i4">Undefined Contract</td></tr>
  </table>>]
key2 [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
  <tr><td port="i1">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i2">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i3" bgcolor="#445773">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i4">
    <table border="1" cellborder="0" cellspacing="0" cellpadding="7" color="#e8726d">
      <tr>
       <td></td>
      </tr>
     </table>
  </td></tr>
  </table>>]
key:i1:e -> key2:i1:w [color="#1bc6a6"]
key:i2:e -> key2:i2:w [color="white"]
}
}
